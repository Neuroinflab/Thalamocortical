Changes in the oryginal code:
==============================
==============================


in init.hoc:
===============
default_var("spike_compress", 0)
instead
default_var("spike_compress", 5)



just befoure running the siumulation
if (save_currents){init_all_data()}

in parlib.hoc
=================
in prun

	while (t < tstop){
		if (pc.id == 0){print t}        
		take_currents()
		order_write_data()	
		fadvance()
	}

instead 


manage_setup.hoc
======================
just after {localloadfile("hoc/traubcon.hoc")}:
{load_file("mylib/lib.hoc")}
{load_file("mylib/params.hoc")}

just before {localloadfile("net/groucho.hoc")}:
{load_file("mylib/stimulus/stimulus.hoc")}

and just after {localloadfile("net/groucho.hoc")}:
{load_file("mylib/stimulus/set_stimulus.hoc")}
{load_file("mylib/init.hoc")}


in mod folders additional files:
================================
izap.mod
izap2.mod
vecevent.mod




Additional mylib library
==============================
==============================
init.hoc - initilizes all needed objects like conteners to save voltage, transmembrane currents e.c.t.
	 - close some or all of the ions chanals if passive_axon = 1, passive_soma = 1, passive_dendrites = 1,
	 passive passive_axon = 1 or set_zero_fast_na = 1 
 
lib.hoc - contains set of funcions used in other files

params.hoc - set of prameters used to save data, to apply additional stimulus, to close some/all of ion chanels

modules:

	saving_data
		saving_data.hoc - contains definition of functions to get, interpolate (with a constance 
			time step -> "t_tep" parameter in params.hoc - since simulation are with a variable time step)
			and write the data 
			
		additional_curr.dat - specification of single currents which you want to write, 
			   number of lines depends on "n_currents" and "n_not_ionic_curr" in a "params.hoc"
			 1."n_not_ionic_curr" lines which contains name of not ionic current
                           with sign {-1,0,1} which tells how the current confluence transmembrane current
                         2."n_currents" lines with conditions when the current should be truck, e.g
                           you can't truck Ca current if there are no Ca chanels in the segment
                         3."n_currents" lines with definition of currents which you want to truck
                            ss object is defined in saving_data.hoc contains not_ionic_sources defined at the top of the file

	shape3d
		cells_shape
			..._shape.dat - single cell 3d morphology

		generate3dinformation.hoc
		extra_shape.hoc
		shapes_mat.txt
		

	stimulus
		stimulus.hoc - definition of procedures to set constant or sinusoidal stimulus (also stimulating the network
			by virtual electrode, but not sure if that works)
		vcevent.hoc - procedures to create stimulator which stimultes network by artifical spikes,
			path to the file with artifical spikes time is defined in "spikes_dir" in params.hoc
			The stimulator is creted if "use_vecstim = 1" is in params.hoc
		set_stimulus.hoc - set stimulus (constant or sinusoidal) - execute procedures defined in stimulus
			
		
To run your own siulation you should be enough to modify : init.hoc, mylib/params.hoc and mylib/set_stimulus.hoc

