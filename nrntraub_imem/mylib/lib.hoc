proc set_env_for_cvode_active(){
	cvode_active(1)
	cvode.atol(1e-1)
    cvode.use_long_double(1)
	//cvode.debug_event(0)
}



func give_current(){local curr, x localobj mt, pp 

	curr = 0
	mt = new MechanismType(1)
	mt.select($s1)

	for (pp = mt.pp_begin(); object_id(pp) != 0; pp = mt.pp_next()) {
		//print secname(), $s1
		x =pp.get_loc()
		curr = curr + pp.i	
		pop_section()
		}
	return curr
}

proc open_file_to_read(){
	strdef str
	$o3 = new File()
	sprint(str, "%s%s", $s1, $s2)
	$o3.ropen(str)

}


proc open_file_to_write(){
    strdef str
    sprint(str, "%s%s%d.dat", $s2, $s1, $3)
	$o4 = new File()
	$o4.wopen(str)
}


proc remove_temporary_data(){local i
	for i = 0, $o1.count()-1{
		$o1.o(i).remove(0,$2 )
		}
}


proc interpolation(){
    for l = 0, $o1.count() -1{
        $o2.append(new Vector())
        $o2.o(l).interpolate($o3,$o4,$o1.o(l))
	    }
}




proc passive(){

        forsec $o1{
	if (pc.id == 0){print secname()}
                spine_area_multiplier  = 0
        if (ismembrane("napf_spinstell")){gbar_napf_spinstell *= spine_area_multiplier}
        if (ismembrane("nap")) { gbar_nap *= spine_area_multiplier }
        if (ismembrane("napf")) { gbar_napf *= spine_area_multiplier }
        if (ismembrane("napf_tcr")) { gbar_napf_tcr *= spine_area_multiplier }
        if (ismembrane("naf2")) { gbar_naf2 *= spine_area_multiplier }
        if (ismembrane("naf_tcr")) { gbar_naf_tcr *= spine_area_multiplier }
        if (ismembrane("naf")) { gbar_naf *= spine_area_multiplier }
        if (ismembrane("kc_fast")) { gbar_kc_fast *= spine_area_multiplier }
        if (ismembrane("kc")) { gbar_kc *= spine_area_multiplier }
        if (ismembrane("kahp")) { gbar_kahp *= spine_area_multiplier }
        if (ismembrane("kahp_slower")) { gbar_kahp_slower *= spine_area_multiplier }
        if (ismembrane("km")) { gbar_km *= spine_area_multiplier }
        if (ismembrane("kdr_fs")) { gbar_kdr_fs *= spine_area_multiplier }
        if (ismembrane("kdr")) { gbar_kdr *= spine_area_multiplier }
        if (ismembrane("ka")) { gbar_ka *= spine_area_multiplier }
        if (ismembrane("ka_ib")) { gbar_ka_ib *= spine_area_multiplier }
        if (ismembrane("k2")) { gbar_k2 *= spine_area_multiplier }
        if (ismembrane("cal")) { gbar_cal *= spine_area_multiplier }
        if (ismembrane("cat")) { gbar_cat *= spine_area_multiplier }
        if (ismembrane("cat_a")) { gbar_cat_a *= spine_area_multiplier }
        if (ismembrane("ar")) { gbar_ar *= spine_area_multiplier }

                }

}

proc set_passive(){

for c = 0, cells.count-1{
	if (passive_axon){
			cells.o(c){passive(cells.o(c).Axon)}
			}
	if (passive_soma){
			cells.o(c){passive(cells.o(c).Soma)}
                       	}

	if(passive_dendrites){
			cells.o(c){passive(cells.o(c).Dendrites)}
                       	}
	}

}

proc close_fast_na(){
	if (set_zero_fast_na){
		forall{
			 if (ismembrane("naf")) { gbar_naf = 0}
			 if (ismembrane("naf2")) { gbar_naf2 = 0 }
	 		 if (ismembrane("naf_tcr")) { gbar_naf_tcr = 0 }

		}
	}
}
