objref iclamp_list, iclampobj
iclamp_list = new List() 





proc set_input_curr() {local i, gid  localobj c, clmp

	if (!use_input_curr) { return }
		
	for i = 1, $2 if ((gid = targetcomp_exists($1+i, 1)) >= 0) {
		c = pc.gid2obj(gid)
		c.comp[1] clmp = new IClamp(0.5)
		clmp.amp = $3
		clmp.dur = $4
		clmp.del = $5
		iclamp_list.append(clmp)
	}
}

proc set_izap_curr() {local i, gid  localobj c, clmp

	if (!use_input_curr) { return }
	for i = 1, $2 if ((gid = targetcomp_exists($1+i, 1)) >= 0) {
		c = pc.gid2obj(gid)
		c.comp[1] clmp = new Izap(0.5)
		clmp.amp = $3
		clmp.dur = $4
		clmp.del = $5
		clmp.f0 = $6
		clmp.f1 = $7
		iclamp_list.append(clmp)
	}
}


proc set_izap_curr2() {local i, gid  localobj c, clmp

        if (!use_input_curr) { return }

        for i = 1, $2 if ((gid = targetcomp_exists($1+i, 1)) >= 0) {
                c = pc.gid2obj(gid)
                c.comp[1] clmp = new Izap2(0.5)
                clmp.amp = $3
                clmp.dur = $4
                clmp.del = $5
                iclamp_list.append(clmp)
        }
}


proc input_electrode_curr(){

    if (input_electrode){

	    for k = 0, cells.count()-1{
    
	    	ax = cells.object(k).presyn_comp
	    	access cells.object(k).comp[ax] 


	    	xx1 = x3d(0)	
	    	xx2 = x3d(1)
	    	yy1 = y3d(0)	
	    	yy2 = y3d(1)
	    	zz1 = z3d(0)	
	    	zz2 = z3d(1)

	    	tt =((xx2 - xx1)*(xelectrode-xx1) + (yy2 - yy1)*(yelectrode-yy1) + (zz2 - zz1)*(zelectrode-zz1))*1.0 /(pow(xx1 - xx2) + pow(yy1 - yy2) + pow(zz1 - zz2))

	    	rx =xx1 +tt*(xx2 - xx1)
	    	ry = yy1 +tt*(yy2 - yy1)
	    	rz =  zz1 +tt*(zz2 - zz1)
	    	dist = sqrt(pow(xelectrode - rx) + pow(yelectrode - ry) + pow(zelectrode - rz))

	    	if (dist < electrode_range){
	    		set_input_curr(k, 1, 3, 2,70)
	    		}
	    	pop_section()
	    	}
	}


}

{localloadfile("vecevent.hoc")}

if (use_vecstim){vecstim_init()}
